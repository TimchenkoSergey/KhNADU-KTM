"use strict";!function(){$(function(){$(".educators__owl-carousel").owlCarousel({items:4,loop:!0,dots:!0,responsive:{0:{items:1},500:{items:2},750:{items:3},1100:{items:4}}})}),$(function(){$(".partners__owl-carousel").owlCarousel({items:4,loop:!0,dots:!0,responsive:{0:{items:1},500:{items:2},750:{items:3},1100:{items:4}}})})}(),function(){$(function(){$(".article-owl-carousel").owlCarousel({items:4,loop:!0,dots:!0,responsive:{0:{items:1},500:{items:2},750:{items:3},1100:{items:4}}})}),$(function(e){e(".swipebox").swipebox()})}(),function(){$(function(){if($(window).width()>768){var e=$(".navigation__item");e.on("mouseenter",function(){$($(this).children("ul")).css("display","block")}),e.on("mouseleave",function(){$($(this).children("ul")).css("display","none")})}else $(".navigation__hamburger").on("click",function(){var e=$(".navigation"),s="navigation--open";e.hasClass(s)?e.removeClass(s):e.addClass(s)})})}(),function(){$(function(){$(".carousel").carousel({interval:6e3,pause:null})}),$(function(){$(".graduates__carousel").owlCarousel({items:1,dots:!1,nav:!0,navText:["<i class='graduates__arrow--prev fa fa-chevron-left'  aria-hidden='true'></i>","<i class='graduates__arrow--next fa fa-chevron-right' aria-hidden='true'></i>"]})}),$(function(){$(".educators__owl-carousel").owlCarousel({items:4,loop:!0,dots:!0,responsive:{0:{items:1},500:{items:2},750:{items:3},1100:{items:4}}})})}(),function(){$(function(){$(".science-owl-carousel").owlCarousel({items:4,loop:!0,dots:!0,responsive:{0:{items:1},500:{items:2},750:{items:3},1100:{items:4}}})}),$(function(e){e(".swipebox").swipebox()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFib3V0LXVzLmpzIiwiYXJ0aWNsZS5qcyIsImluaXQuanMiLCJtYWluLXBhZ2UuanMiLCJzY2llbmNlLmpzIl0sIm5hbWVzIjpbIiQiLCJvd2xDYXJvdXNlbCIsIml0ZW1zIiwibG9vcCIsImRvdHMiLCJyZXNwb25zaXZlIiwiMCIsIjUwMCIsIjc1MCIsIjExMDAiLCJzd2lwZWJveCIsIndpbmRvdyIsIndpZHRoIiwibmF2aWdhdGlvbkl0ZW1zIiwib24iLCJ0aGlzIiwiY2hpbGRyZW4iLCJjc3MiLCJuYXZpZ2F0aW9uIiwib3BlbkNsYXNzIiwiaGFzQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwiY2Fyb3VzZWwiLCJpbnRlcnZhbCIsInBhdXNlIiwibmF2IiwibmF2VGV4dCJdLCJtYXBwaW5ncyI6ImNBQUEsV0FJQ0EsRUFBRSxXQUNLQSxFQUFFLDRCQUE0QkMsYUFDMUJDLE1BQU8sRUFDUEMsTUFBTSxFQUNOQyxNQUFNLEVBQ1pDLFlBQ0NDLEdBQVFKLE1BQU8sR0FDWkssS0FBUUwsTUFBTyxHQUNmTSxLQUFRTixNQUFPLEdBQ2ZPLE1BQVFQLE1BQU8sUUFLckJGLEVBQUUsV0FDRUEsRUFBRSwyQkFBMkJDLGFBQ3pCQyxNQUFPLEVBQ1BDLE1BQU0sRUFDTkMsTUFBTSxFQUNaQyxZQUNDQyxHQUFRSixNQUFPLEdBQ1pLLEtBQVFMLE1BQU8sR0FDZk0sS0FBUU4sTUFBTyxHQUNmTyxNQUFRUCxNQUFPLFdDM0J6QixXQUdDRixFQUFFLFdBQ0tBLEVBQUUseUJBQXlCQyxhQUN2QkMsTUFBTyxFQUNQQyxNQUFNLEVBQ05DLE1BQU0sRUFDWkMsWUFDQ0MsR0FBUUosTUFBTyxHQUNaSyxLQUFRTCxNQUFPLEdBQ2ZNLEtBQVFOLE1BQU8sR0FDZk8sTUFBUVAsTUFBTyxRQUtyQkYsRUFBRSxTQUFTQSxHQUNQQSxFQUFHLGFBQWNVLGdCQ2hCekIsV0FJQ1YsRUFBRSxXQUNELEdBQUlBLEVBQUVXLFFBQVFDLFFBQVUsSUFBSyxDQUM1QixHQUFJQyxHQUFrQmIsRUFBRSxvQkFFeEJhLEdBQWdCQyxHQUFHLGFBQWMsV0FDaENkLEVBQUVBLEVBQUVlLE1BQU1DLFNBQVMsT0FBT0MsSUFBSSxVQUFXLFdBRzFDSixFQUFnQkMsR0FBRyxhQUFjLFdBQ2hDZCxFQUFFQSxFQUFFZSxNQUFNQyxTQUFTLE9BQU9DLElBQUksVUFBVyxjQUkxQ2pCLEdBQUUsMEJBQTBCYyxHQUFHLFFBQVMsV0FDdkMsR0FBSUksR0FBYWxCLEVBQUUsZUFDbEJtQixFQUFhLGtCQUVWRCxHQUFXRSxTQUFTRCxHQUN2QkQsRUFBV0csWUFBWUYsR0FHdkJELEVBQVdJLFNBQVNILFVDM0J6QixXQUlDbkIsRUFBRSxXQUNEQSxFQUFFLGFBQWF1QixVQUNkQyxTQUFVLElBQ1ZDLE1BQU8sU0FLVHpCLEVBQUUsV0FDREEsRUFBRSx3QkFBd0JDLGFBQ3pCQyxNQUFRLEVBQ1JFLE1BQVEsRUFDUnNCLEtBQVEsRUFDUkMsU0FDQyxnRkFDQSxxRkFNSDNCLEVBQUUsV0FDS0EsRUFBRSw0QkFBNEJDLGFBQzFCQyxNQUFPLEVBQ1BDLE1BQU0sRUFDTkMsTUFBTSxFQUNaQyxZQUNDQyxHQUFRSixNQUFPLEdBQ1pLLEtBQVFMLE1BQU8sR0FDZk0sS0FBUU4sTUFBTyxHQUNmTyxNQUFRUCxNQUFPLFdDbEN6QixXQUdJRixFQUFFLFdBQ0VBLEVBQUUseUJBQXlCQyxhQUN2QkMsTUFBTyxFQUNQQyxNQUFNLEVBQ05DLE1BQU0sRUFDTkMsWUFDSUMsR0FBUUosTUFBTyxHQUNmSyxLQUFRTCxNQUFPLEdBQ2ZNLEtBQVFOLE1BQU8sR0FDZk8sTUFBUVAsTUFBTyxRQUszQkYsRUFBRSxTQUFTQSxHQUNQQSxFQUFHLGFBQWNVIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCkge1xyXG5cdFwidXNlIHN0cmljdFwiO1xyXG5cclxuXHQvL2luaXQgb3dsIGNhcm91c2VsIGZvciBhYm91dC11cyBwYWdlIGJsb2NrIGVkdWNhdG9yc1xyXG5cdCQoZnVuY3Rpb24oKXtcclxuICAgICAgICAkKFwiLmVkdWNhdG9yc19fb3dsLWNhcm91c2VsXCIpLm93bENhcm91c2VsKHtcclxuICAgICAgICAgICAgaXRlbXM6IDQsXHJcbiAgICAgICAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgIGRvdHM6IHRydWUsXHJcblx0XHQgICAgcmVzcG9uc2l2ZToge1xyXG5cdFx0ICAgIFx0MCAgIDogeyBpdGVtczogMSB9LFxyXG5cdFx0ICAgICAgICA1MDAgOiB7IGl0ZW1zOiAyIH0sXHJcblx0XHQgICAgICAgIDc1MCA6IHsgaXRlbXM6IDMgfSxcclxuXHRcdCAgICAgICAgMTEwMDogeyBpdGVtczogNCB9XHJcblx0XHQgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJChmdW5jdGlvbigpe1xyXG4gICAgICAgICQoXCIucGFydG5lcnNfX293bC1jYXJvdXNlbFwiKS5vd2xDYXJvdXNlbCh7XHJcbiAgICAgICAgICAgIGl0ZW1zOiA0LFxyXG4gICAgICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgICAgICBkb3RzOiB0cnVlLFxyXG5cdFx0ICAgIHJlc3BvbnNpdmU6IHtcclxuXHRcdCAgICBcdDAgICA6IHsgaXRlbXM6IDEgfSxcclxuXHRcdCAgICAgICAgNTAwIDogeyBpdGVtczogMiB9LFxyXG5cdFx0ICAgICAgICA3NTAgOiB7IGl0ZW1zOiAzIH0sXHJcblx0XHQgICAgICAgIDExMDA6IHsgaXRlbXM6IDQgfVxyXG5cdFx0ICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuXHRcInVzZSBzdHJpY3RcIjtcclxuXHJcblx0JChmdW5jdGlvbigpe1xyXG4gICAgICAgICQoXCIuYXJ0aWNsZS1vd2wtY2Fyb3VzZWxcIikub3dsQ2Fyb3VzZWwoe1xyXG4gICAgICAgICAgICBpdGVtczogNCxcclxuICAgICAgICAgICAgbG9vcDogdHJ1ZSxcclxuICAgICAgICAgICAgZG90czogdHJ1ZSxcclxuXHRcdCAgICByZXNwb25zaXZlOiB7XHJcblx0XHQgICAgXHQwICAgOiB7IGl0ZW1zOiAxIH0sXHJcblx0XHQgICAgICAgIDUwMCA6IHsgaXRlbXM6IDIgfSxcclxuXHRcdCAgICAgICAgNzUwIDogeyBpdGVtczogMyB9LFxyXG5cdFx0ICAgICAgICAxMTAwOiB7IGl0ZW1zOiA0IH1cclxuXHRcdCAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKGZ1bmN0aW9uKCQpIHtcclxuICAgICAgICAkKCBcIi5zd2lwZWJveFwiICkuc3dpcGVib3goKTtcclxuICAgIH0pO1xyXG59KSgpOyIsIi8vTW9kdWxlIGluaXRcclxuLy9Nb2R1bGUgZm9yIGNvbXBvbmVudHMgaW5pdGlhbGl6YXRpb24gXHJcbihmdW5jdGlvbigpIHtcclxuXHRcInVzZSBzdHJpY3RcIjtcclxuXHJcblx0Ly9qcyBmb3IgbWVpbiBtZW51XHJcblx0JChmdW5jdGlvbiAoKSB7XHJcblx0XHRpZiAoJCh3aW5kb3cpLndpZHRoKCkgPiA3NjgpIHtcclxuXHRcdFx0dmFyIG5hdmlnYXRpb25JdGVtcyA9ICQoXCIubmF2aWdhdGlvbl9faXRlbVwiKTtcclxuXHJcblx0XHRcdG5hdmlnYXRpb25JdGVtcy5vbihcIm1vdXNlZW50ZXJcIiwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdCQoJCh0aGlzKS5jaGlsZHJlbihcInVsXCIpKS5jc3MoXCJkaXNwbGF5XCIsIFwiYmxvY2tcIik7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0bmF2aWdhdGlvbkl0ZW1zLm9uKFwibW91c2VsZWF2ZVwiLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0JCgkKHRoaXMpLmNoaWxkcmVuKFwidWxcIikpLmNzcyhcImRpc3BsYXlcIiwgXCJub25lXCIpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGVsc2Uge1xyXG5cdFx0XHQkKFwiLm5hdmlnYXRpb25fX2hhbWJ1cmdlclwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHR2YXIgbmF2aWdhdGlvbiA9ICQoXCIubmF2aWdhdGlvblwiKSxcclxuXHRcdFx0XHRcdG9wZW5DbGFzcyAgPSBcIm5hdmlnYXRpb24tLW9wZW5cIjtcclxuXHJcblx0XHRcdFx0aWYgKG5hdmlnYXRpb24uaGFzQ2xhc3Mob3BlbkNsYXNzKSkge1xyXG5cdFx0XHRcdFx0bmF2aWdhdGlvbi5yZW1vdmVDbGFzcyhvcGVuQ2xhc3MpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRcdG5hdmlnYXRpb24uYWRkQ2xhc3Mob3BlbkNsYXNzKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuXHRcInVzZSBzdHJpY3RcIjtcclxuXHJcblx0Ly9pbml0IG1haW4gc2xpZGVyXHJcblx0JChmdW5jdGlvbiAoKSB7XHJcblx0XHQkKCcuY2Fyb3VzZWwnKS5jYXJvdXNlbCh7XHJcblx0XHRcdGludGVydmFsOiA2MDAwLFxyXG5cdFx0XHRwYXVzZTogbnVsbFxyXG5cdFx0fSk7XHJcblx0fSk7XHJcblxyXG5cdC8vaW5pdCBvd2wgY2Fyb3VzZWwgZm9yIG1haW4gcGFnZSBibG9jayBncmFkdWF0ZXNcclxuXHQkKGZ1bmN0aW9uICgpIHtcclxuXHRcdCQoXCIuZ3JhZHVhdGVzX19jYXJvdXNlbFwiKS5vd2xDYXJvdXNlbCh7XHJcblx0XHRcdGl0ZW1zIDogMSxcclxuXHRcdFx0ZG90cyAgOiBmYWxzZSxcclxuXHRcdFx0bmF2ICAgOiB0cnVlLFxyXG5cdFx0XHRuYXZUZXh0IDogW1xyXG5cdFx0XHRcdFwiPGkgY2xhc3M9J2dyYWR1YXRlc19fYXJyb3ctLXByZXYgZmEgZmEtY2hldnJvbi1sZWZ0JyAgYXJpYS1oaWRkZW49J3RydWUnPjwvaT5cIixcclxuXHRcdFx0XHRcIjxpIGNsYXNzPSdncmFkdWF0ZXNfX2Fycm93LS1uZXh0IGZhIGZhLWNoZXZyb24tcmlnaHQnIGFyaWEtaGlkZGVuPSd0cnVlJz48L2k+XCJcclxuXHRcdFx0XVxyXG5cdFx0fSk7XHJcblx0fSk7XHJcblxyXG5cdC8vaW5pdCBvd2wgY2Fyb3VzZWwgZm9yIG1haW4gcGFnZSBibG9jayBlZHVjYXRvcnNcclxuXHQkKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgJChcIi5lZHVjYXRvcnNfX293bC1jYXJvdXNlbFwiKS5vd2xDYXJvdXNlbCh7XHJcbiAgICAgICAgICAgIGl0ZW1zOiA0LFxyXG4gICAgICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgICAgICBkb3RzOiB0cnVlLFxyXG5cdFx0ICAgIHJlc3BvbnNpdmU6IHtcclxuXHRcdCAgICBcdDAgICA6IHsgaXRlbXM6IDEgfSxcclxuXHRcdCAgICAgICAgNTAwIDogeyBpdGVtczogMiB9LFxyXG5cdFx0ICAgICAgICA3NTAgOiB7IGl0ZW1zOiAzIH0sXHJcblx0XHQgICAgICAgIDExMDA6IHsgaXRlbXM6IDQgfVxyXG5cdFx0ICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59KSgpOyIsIihmdW5jdGlvbigpIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG5cclxuICAgICQoZnVuY3Rpb24oKXtcclxuICAgICAgICAkKFwiLnNjaWVuY2Utb3dsLWNhcm91c2VsXCIpLm93bENhcm91c2VsKHtcclxuICAgICAgICAgICAgaXRlbXM6IDQsXHJcbiAgICAgICAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgIGRvdHM6IHRydWUsXHJcbiAgICAgICAgICAgIHJlc3BvbnNpdmU6IHtcclxuICAgICAgICAgICAgICAgIDAgICA6IHsgaXRlbXM6IDEgfSxcclxuICAgICAgICAgICAgICAgIDUwMCA6IHsgaXRlbXM6IDIgfSxcclxuICAgICAgICAgICAgICAgIDc1MCA6IHsgaXRlbXM6IDMgfSxcclxuICAgICAgICAgICAgICAgIDExMDA6IHsgaXRlbXM6IDQgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKGZ1bmN0aW9uKCQpIHtcclxuICAgICAgICAkKCBcIi5zd2lwZWJveFwiICkuc3dpcGVib3goKTtcclxuICAgIH0pO1xyXG59KSgpOyJdfQ==
